library(tidyverse)
library(here)
# Datasets
library(gapminder)
# Set theme (very minimal)
theme_set(theme_bw(base_size = 12))
theme_update(
axis.line = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.margin = margin(rep(15, 4)),
strip.background = element_rect(colour = NA, fill = NA),
strip.text = element_text(face = "bold", hjust = 0)
)
iris_boxplot <- ggplot(data = iris) +
aes(x = Species, y = Sepal.Length, color = Species) +
geom_boxplot() +
geom_jitter(position = position_jitter(0.2)) +
scale_y_continuous(breaks = seq(0, 8, by = 2), limits = c(0, 8), expand = c(0, 0)) +
xlab(NULL) +
ylab("Sepal length (cm)")
iris_boxplot
ggsave(here("output", "iris_boxplot.png"), iris_boxplot)
# Focus on 2007 only
data <- gapminder %>%
filter(year == 2007)
gapminder_graph <- ggplot(data, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(size = pop, color = continent), alpha = 0.5) +
stat_smooth(formula = y ~ log10(x), se = FALSE, size = 0.5, color = "black", method = 'gam', linetype="dotted") +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
scale_size_area(guide = "none", max_size = 15) +
scale_x_continuous(labels = scales::dollar, breaks = seq(0, 50000, by = 10000), limits = c(0, 50000), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0, 90, by = 10), limits = c(0, 90), expand = c(0, 0)) +
scale_color_brewer(name = "", palette = "Dark2")
gapminder_graph
ggsave(here("output", "gapminder_chart.png"), gapminder_graph)
# Set theme (very minimal)
theme_set(theme_bw(12))
theme_update(
axis.line = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.margin = margin(rep(15, 4)),
strip.background = element_rect(colour = NA, fill = NA),
strip.text = element_text(face = "bold", hjust = 0)
)
iris_boxplot <- ggplot(data = iris) +
aes(x = Species, y = Sepal.Length, color = Species) +
geom_boxplot() +
geom_jitter(position = position_jitter(0.2)) +
scale_y_continuous(breaks = seq(0, 8, by = 2), limits = c(0, 8), expand = c(0, 0)) +
xlab(NULL) +
ylab("Sepal length (cm)")
iris_boxplot
# Set theme (very minimal)
theme_set(theme_bw())
theme_update(
axis.line = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.margin = margin(rep(15, 4)),
strip.background = element_rect(colour = NA, fill = NA),
strip.text = element_text(face = "bold", hjust = 0)
text = element_text(family = "Arial", size = 12)
# Set theme (very minimal)
theme_set(theme_bw())
theme_update(
axis.line = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.margin = margin(rep(15, 4)),
strip.background = element_rect(colour = NA, fill = NA),
strip.text = element_text(face = "bold", hjust = 0),
text = element_text(family = "Arial", size = 12)
)
iris_boxplot <- ggplot(data = iris) +
aes(x = Species, y = Sepal.Length, color = Species) +
geom_boxplot() +
geom_jitter(position = position_jitter(0.2)) +
scale_y_continuous(breaks = seq(0, 8, by = 2), limits = c(0, 8), expand = c(0, 0)) +
xlab(NULL) +
ylab("Sepal length (cm)")
iris_boxplot
ggsave(here("output", "iris_boxplot.png"), iris_boxplot)
# Set theme (very minimal)
theme_set(theme_bw())
theme_update(
axis.line = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.margin = margin(rep(15, 4)),
strip.background = element_rect(colour = NA, fill = NA),
strip.text = element_text(face = "bold", hjust = 0),
text = element_text(size = 12)
)
iris_boxplot <- ggplot(data = iris) +
aes(x = Species, y = Sepal.Length, color = Species) +
geom_boxplot() +
geom_jitter(position = position_jitter(0.2)) +
scale_y_continuous(breaks = seq(0, 8, by = 2), limits = c(0, 8), expand = c(0, 0)) +
xlab(NULL) +
ylab("Sepal length (cm)")
iris_boxplot
ggsave(here("output", "iris_boxplot.png"), iris_boxplot)
# Focus on 2007 only
data <- gapminder %>%
filter(year == 2007)
gapminder_graph <- ggplot(data, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(size = pop, color = continent), alpha = 0.5) +
stat_smooth(formula = y ~ log10(x), se = FALSE, size = 0.5, color = "black", method = 'gam', linetype="dotted") +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
scale_size_area(guide = "none", max_size = 15) +
scale_x_continuous(labels = scales::dollar, breaks = seq(0, 50000, by = 10000), limits = c(0, 50000), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0, 90, by = 10), limits = c(0, 90), expand = c(0, 0)) +
scale_color_brewer(name = "", palette = "Dark2")
gapminder_graph
ggsave(here("output", "gapminder_chart.png"), gapminder_graph)
library(gganimate)
# if you get a "Error in transform_path", you will need to install the 'transformr' library
# Here we use gganimate to look at 30 years worth of data as an animation
data_filtered_30yrs <- gapminder %>%
filter(year > 1976)
animated_plot <- ggplot(data_filtered_30yrs, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(size = pop, color = continent), alpha = 0.5) +
stat_smooth(formula = y ~ log10(x), se = FALSE, size = 0.5, color = "black", method = 'gam', linetype="dotted") +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
scale_size_area(guide = "none", max_size = 15) +
scale_x_continuous(labels = scales::dollar, breaks = seq(0, 60000, by = 10000), limits = c(0, 60000), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0, 90, by = 10), limits = c(0, 90), expand = c(0, 0)) +
scale_color_brewer(name = "", palette = "Dark2")  +
# gganimate code
ggtitle("{frame_time}") +
transition_time(year) +
ease_aes("linear") +
enter_fade() +
exit_fade()
# it might take a while to run!
animated_plot
# Save as gif
anim_save(here("output", "gapminder_animated.gif"), animated_plot)
anim_save(here("output", "gapminder_animated.gif"), animated_plot)
# Load in required libraies
library(tidyverse)
library(here)
#| echo: false
#| include: false
data <- read_csv("oasis_cross-sectional.csv")
View(data)
#| echo: false
#| include: false
# Explanation of the columns can be found here: https://www.oasis-brains.org/files/oasis_cross-sectional_facts.pdf
data <- read_csv("oasis_cross-sectional.csv")
names(data
)
glimpse(data)
data <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway
filter(is.na(CDR)) %>%
# Let's remove any non-relevant columns
select(-Delay, -Hand)
View(data)
View(data)
#| echo: false
#| include: false
data <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway
filter(!is.na(CDR)) %>%
# Let's remove any non-relevant columns
select(-Delay, -Hand)
#| echo: false
#| include: false
data <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway
filter(!is.na(CDR), !is.na(SES)) %>%
# Let's remove any non-relevant columns
select(-Delay, -Hand)
View(data)
#| echo: false
#| include: false
data <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "nondemented",
CDR == 0.5 ~ "very mild",
CDR == 1 ~ "mild",
CDR == 2 ~ "moderate")) %>%
# Let's remove any non-relevant columns
select(-Delay, -Hand)
View(data)
heatmap(data)
pairs(data)
View(data)
View(data)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(c(everything(), "M/F", "CDR"), -Delay, -Hand. -ID) %>%
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(c(everything(), "M/F", "CDR"), -Delay, -Hand. -ID)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(c(everything(), "M/F", "CDR"), -c(Delay, Hand. ID))
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(everything(), "M/F", "CDR", -Delay, -Hand. -ID)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(everything(), "M/F", "CDR", -Delay, -Hand, -ID)
View(data_clean)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(c(everything(), "M/F", "CDR"), -Delay, -Hand, -ID)
View(data_clean)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select("M/F", "CDR", everything(), -Delay, -Hand, -ID)
View(data_clean)
# Get all numerical variables
data <- data_clean[, "Age":"ASF"]
View(data_clean)
data <- data_clean[, c("Age":"ASF")]
# Get all numerical variables
data <- data_clean %>%
select(Age:ASF)
# Get the different groups
groups <- data_clean %>%
select(CDR)
pairs(data)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select("M/F", "CDR", "Educ", "SES", everything(), -Delay, -Hand, -ID)
# Get all numerical variables
data <- data_clean %>%
select(Age:ASF)
# Get the different groups
groups <- data_clean %>%
select(CDR)
pairs(data)
library(corrplot)
corrplot(numeric_data, method="color")
numeric_data <- data_clean %>%
select(Age:ASF)
corrplot(numeric_data, method="color")
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select("M/F", "CDR", "Educ", "SES", everything(), -Delay, -Hand, -ID)
# Get all numerical variables into a single dataframe
numeric_data <- data_clean %>%
select(Age:ASF)
# Get the different groups
groups <- data_clean %>%
select(CDR)
corrplot(numeric_data, method="color")
# Get all numerical variables into a single dataframe
numeric_data <- data_clean %>%
select(Age:ASF)
# Get the different groups
groups <- data_clean %>%
select(CDR)
corrplot(cor(numeric_data), method="color")
View(data_clean)
categorical_data <- data_clean %>%
select("M/F":"SES")
summarise(across(eveything(), funs(nlevels(.), nmiss=sum(is.na(.)))))
categorical_data <- data_clean %>%
select("M/F":"SES")
table(categorical_data)
table(categorical_data$`M/F`)
categorical_data <- data_clean %>%
select("M/F":"SES")
ggplot(categorical_data) %>%
geom_bar(mapping = aes(x = "M/F", y = freq), stat = "identity")
ggplot(data = categorical_data) %>%
geom_bar(mapping = aes(x = "M/F", y = freq), stat = "identity")
View(categorical_data)
#| echo: false
#| include: false
# Load in required libraies
library(tidyverse)
library(here)
library(corrplot)
#| echo: false
#| include: false
# Load in required libraies
library(tidyverse)
library(here)
library(corrplot)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Encode M as male and f as female
mutate(male_or_female = case_when(`M/F` == "M" ~ "Male",
`M/F` == "F" ~ "Female")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(male_or_female, CDR, Educ, SES, everything(), -Delay, -Hand, -ID, -`M/F`)
#| echo: false
#| include: false
#|
data_clean <- read_csv("oasis_cross-sectional.csv") %>%
# Remove rows that do not have CDR as these are likely to be people who dont have have dementia anyway. In addition, I am going to remove any other rows that have NAs in the socioeconomic forum to make visualizations easy!
filter(!is.na(CDR), !is.na(SES)) %>%
# Encode CDR as nondemented, very mild dementia, mild dementia, moderate dementia
mutate(CDR = case_when(CDR == 0 ~ "Nondemented",
CDR == 0.5 ~ "Very mild",
CDR == 1 ~ "Mild",
CDR == 2 ~ "Moderate")) %>%
# Encode M as male and f as female
mutate(male_or_female = case_when(`M/F` == "M" ~ "Male",
`M/F` == "F" ~ "Female")) %>%
# Let's remove any non-relevant columns and rearange columns so it's easier to work with later
select(male_or_female, CDR, Educ, SES, everything(), -Delay, -Hand, -ID, -`M/F`)
